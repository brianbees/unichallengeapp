import { useSQLiteContext } from 'expo-sqlite';import { logError } from '@/utils/errors';export function useMatchesRepo(){const db=useSQLiteContext();async function saveMatch(payload){const {teams,scores,events=[]}=payload||{};const nums=[scores?.A,scores?.B,scores?.C??0,scores?.D??0];if(!nums.every(n=>Number.isFinite(n)&&n>=0)){throw new Error('SAVE_FAILED');}const now=Date.now();try{const res=await db.runAsync(`INSERT INTO matches (created_at, teamA, teamB, teamC, teamD, scoreA, scoreB, scoreC, scoreD, events_json) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);`,[now,teams?.A??'Team A',teams?.B??'Team B',teams?.C??'Team C',teams?.D??'Team D',scores.A|0,scores.B|0,(scores.C|0),(scores.D|0),JSON.stringify(events)]);return {ok:true,id:res.lastInsertRowId};}catch(e){logError(e,'saveMatch');throw new Error('SAVE_FAILED');}}async function getMatches(limit=50,offset=0){try{const rows=await db.getAllAsync(`SELECT * FROM matches ORDER BY created_at DESC LIMIT ? OFFSET ?;`,[limit,offset]);return rows;}catch(e){logError(e,'getMatches');throw new Error('DB_UNAVAILABLE');}}return { saveMatch, getMatches };}
